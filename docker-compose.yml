version: '3.8'

services:
  sessao-sicredi:
    image: fernando2812/sessao:latest
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - kafka
      - postgres  # Garante que o banco de dados esteja dispon√≠vel antes de subir a API
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092  # Conectar ao Kafka dentro do Docker
      SERVER_PORT: 8000  # Porta da API
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/votospopule
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    ports:
      - "8000:8000"
    networks:
      - java-na-veia

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - java-na-veia

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://host.docker.internal:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - java-na-veia

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: always
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - java-na-veia

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: votospopule
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    networks:
      - java-na-veia
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    depends_on:
      - postgres
    ports:
      - "8082:8080"  # Acesse em http://localhost:8082
    networks:
      - java-na-veia

networks:
  java-na-veia:
    driver: bridge

volumes:
  postgres_data:
